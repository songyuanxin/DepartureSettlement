<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.syx.mapper.lsjs.ImportDataMapper">
    <resultMap id="ImportDataResult" type="com.syx.domain.ImportData">
        <result property="quitPernr" column="quit_pernr"/>
        <result property="personScope" column="person_scope"/>
        <result property="directPernr" column="direct_pernr"/>
        <result property="division" column="division"/>
        <result property="originatorPernr" column="originator_pernr"/>
        <result property="importTime" column="import_time"/>
        <result property="absenteeismDoc" column="absenteeism_doc"/>
        <result property="reEntry" column="re_entry"/>
    </resultMap>

    <insert id="insertImportData" parameterType="com.syx.domain.ImportData">
        insert into ImportData (quit_pernr, person_scope, direct_pernr, division, originator_pernr, import_time,
                                absenteeism_doc, re_entry)
        values (#{quitPernr}, #{personScope}, #{directPernr}, #{division}, #{originatorPernr}, #{importTime},
                #{absenteeismDoc}, #{reEntry})
    </insert>

    <select id="getLastImoprtDataByPernr" parameterType="string" resultMap="ImportDataResult">
        select top 1 *
        from ImportData
        where quit_pernr = #{quitPernr}
        order by import_time desc
    </select>

    <delete id="deleteImportData" parameterType="string">
        delete
        from ImportData
        where quit_pernr = #{quitPernr}
          and convert(date, import_time) = #{importTime}
    </delete>
    <delete id="deleteImportDataByPernr" parameterType="string">
        delete
        from ImportData
        where quit_pernr = #{quitPernr}
    </delete>

    <select id="getImoprtDataByTime" parameterType="com.syx.domains.dto.ApproveGetDto" resultMap="ImportDataResult">
        select *
        from (select *, row_number() over(partition by quit_pernr order by import_time desc) rows from ImportData) t
        <where>
            t.rows = 1
            <if test="startTime != null and endTime != null">
                AND convert(date,t.import_time) between #{startTime} and #{endTime}
            </if>
            <if test="division != null and division != ''">
                AND division = #{division}
            </if>
            <if test="personScope != null and personScope != ''">
                AND person_scope = #{personScope}
            </if>
            <if test=" importPernr != null and importPernr != ''">
                AND originator_pernr = #{importPernr}
            </if>
            <if test="quitPernr != null and quitPernr != '' ">
                AND quit_Pernr = #{quitPernr}
            </if>
        </where>
    </select>

    <select id="getImoprtDataByTimeAndPernr" parameterType="com.syx.domains.dto.ImportDataGetDto"
            resultMap="ImportDataResult">
        select *
        from ImportData
        where quit_pernr = #{quitPernr}
          and convert(date, import_time) = #{importTime}
    </select>

    <select id="getImoprtDataByImportTime" parameterType="string" resultMap="ImportDataResult">
        select *
        from ImportData
        where convert(date, import_time) = #{importTime}
    </select>

    <select id="getImportDataList" resultMap="ImportDataResult">
        select top 500 *
        from ImportData
    </select>

    <select id="getImoprtDataByPernr" parameterType="string" resultType="com.syx.domains.vo.ImportDataRes">
        select a.quit_pernr           工号
             , max(person_scope)      职能体系
             , max(direct_pernr)      直接上级工号
             , max(p1.name)           直接上级姓名
             , max(b.area_pernr)   as 区域经理
             , max(p3.name)        as 区域经理姓名
             , max(b.region_pernr) as 地区经理工号
             , max(p2.name)        as 地区经理姓名
             , max(division)          分部
             , max(originator_pernr)  导入人工号
             , max(import_time)       导入时间
             , max(absenteeism_doc)   旷工文号
        from ImportData a
                 inner join Approve b on a.quit_pernr = b.quit_pernr
                 left join personInfo p1 on p1.alias = a.direct_pernr
                 left join personInfo p2 on p2.alias = b.region_pernr
                 left join personInfo p3 on p3.alias = b.area_pernr
        where a.quit_pernr in ('063504', '057140', '066119')
        group by a.quit_pernr
    </select>

    <select id="getImoprtDataByQuitPernr" parameterType="string" resultMap="ImportDataResult">
        select *
        from (select *, row_number() over(partition by quit_pernr order by import_time desc) rows from ImportData) t
        where t.rows = 1
          and t.quit_pernr = #{quitPernr}
    </select>

    <select id="getImportDataByImportPernr" parameterType="string" resultType="com.syx.domain.ImportData">
        select *
        from (select *, row_number() over(partition by quit_pernr order by import_time desc) rows from ImportData) t
        where t.rows = 1
          and t.originator_pernr = #{ImportPernr}
    </select>
    <select id="getImportDataByQuitPernr" parameterType="string" resultType="com.syx.domain.ImportData">
        select *
        from ImportData
        where quit_pernr = #{quitPernr}
    </select>


</mapper>
